(window.webpackJsonp=window.webpackJsonp||[]).push([[22],{133:function(e,t,a){"use strict";var n=a(0),r=a.n(n),i=a(110),l=a.n(i);function b(e){return(b="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e})(e)}function c(e,t){for(var a=0;a<t.length;a++){var n=t[a];n.enumerable=n.enumerable||!1,n.configurable=!0,"value"in n&&(n.writable=!0),Object.defineProperty(e,n.key,n)}}function o(e,t){return!t||"object"!==b(t)&&"function"!=typeof t?d(e):t}function s(e){return(s=Object.setPrototypeOf?Object.getPrototypeOf:function(e){return e.__proto__||Object.getPrototypeOf(e)})(e)}function d(e){if(void 0===e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return e}function m(e,t){return(m=Object.setPrototypeOf||function(e,t){return e.__proto__=t,e})(e,t)}r.a.Component;function p(e){return(p="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e})(e)}function u(e,t){for(var a=0;a<t.length;a++){var n=t[a];n.enumerable=n.enumerable||!1,n.configurable=!0,"value"in n&&(n.writable=!0),Object.defineProperty(e,n.key,n)}}function O(e,t){return!t||"object"!==p(t)&&"function"!=typeof t?h(e):t}function j(e){return(j=Object.setPrototypeOf?Object.getPrototypeOf:function(e){return e.__proto__||Object.getPrototypeOf(e)})(e)}function h(e){if(void 0===e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return e}function N(e,t){return(N=Object.setPrototypeOf||function(e,t){return e.__proto__=t,e})(e,t)}var g=function(e){function t(e){var a;return function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,t),a=O(this,j(t).call(this,e)),O(a,h(a))}var a,n,i;return function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function");e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,writable:!0,configurable:!0}}),t&&N(e,t)}(t,e),a=t,(n=[{key:"render",value:function(){var e=l()(this.props,"color","#787878"),t=l()(this.props,"bgColor","#FEFC79"),a=this.props.children;return r.a.createElement("span",{style:{color:e,backgroundColor:t}},a)}}])&&u(a.prototype,n),i&&u(a,i),t}(r.a.Component),f=a(104),y=a.n(f);function C(e){return(C="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e})(e)}function v(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}function R(e,t){for(var a=0;a<t.length;a++){var n=t[a];n.enumerable=n.enumerable||!1,n.configurable=!0,"value"in n&&(n.writable=!0),Object.defineProperty(e,n.key,n)}}function x(e,t,a){return t&&R(e.prototype,t),a&&R(e,a),e}function k(e,t){return!t||"object"!==C(t)&&"function"!=typeof t?E(e):t}function L(e){return(L=Object.setPrototypeOf?Object.getPrototypeOf:function(e){return e.__proto__||Object.getPrototypeOf(e)})(e)}function E(e){if(void 0===e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return e}function w(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function");e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,writable:!0,configurable:!0}}),t&&S(e,t)}function S(e,t){return(S=Object.setPrototypeOf||function(e,t){return e.__proto__=t,e})(e,t)}var _=function(e){function t(e){var a;return v(this,t),a=k(this,L(t).call(this,e)),k(a,E(a))}return w(t,e),x(t,[{key:"render",value:function(){var e=l()(this.props,"style","secondary"),t=l()(this.props,"class"),a=this.props.children;return r.a.createElement("span",{className:y()("badge badge--".concat(e),t),style:{fontSize:".7rem"}},a)}}]),t}(r.a.Component),T=function(e){function t(e){var a;return v(this,t),a=k(this,L(t).call(this,e)),k(a,E(a))}return w(t,e),x(t,[{key:"render",value:function(){var e=this.props.children;return r.a.createElement("div",{className:"badge-group"},e)}}]),t}(r.a.Component);a.d(t,"c",(function(){return g})),a.d(t,"a",(function(){return _})),a.d(t,"b",(function(){return T}))},57:function(e,t,a){"use strict";a.r(t),a.d(t,"frontMatter",(function(){return b})),a.d(t,"rightToc",(function(){return c})),a.d(t,"default",(function(){return d}));a(0);var n=a(102),r=a(133);function i(){return(i=Object.assign||function(e){for(var t=1;t<arguments.length;t++){var a=arguments[t];for(var n in a)Object.prototype.hasOwnProperty.call(a,n)&&(e[n]=a[n])}return e}).apply(this,arguments)}function l(e,t){if(null==e)return{};var a,n,r=function(e,t){if(null==e)return{};var a,n,r={},i=Object.keys(e);for(n=0;n<i.length;n++)a=i[n],t.indexOf(a)>=0||(r[a]=e[a]);return r}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(n=0;n<i.length;n++)a=i[n],t.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(r[a]=e[a])}return r}var b={id:"registry",title:"Registry",sidebar_label:"스크립트 등록하기"},c=[{value:"LoaderRegistry?",id:"loaderregistry",children:[]},{value:"인터페이스",id:"인터페이스",children:[{value:"CustomEventEmitter",id:"customeventemitter",children:[]},{value:"IBSheetLoader",id:"ibsheetloader",children:[]},{value:"LoaderRegistry",id:"loaderregistry-1",children:[]},{value:"RegistryItem",id:"registryitem",children:[]},{value:"RegistryItemData",id:"registryitemdata",children:[]}]},{value:"주요 기능",id:"주요-기능",children:[{value:"add",id:"add",children:[]},{value:"addAll",id:"addall",children:[]},{value:"get",id:"get",children:[]},{value:"getAll",id:"getall",children:[]},{value:"info",id:"info",children:[]},{value:"list",id:"list",children:[]},{value:"exists",id:"exists",children:[]},{value:"remove",id:"remove",children:[]}]},{value:"사용 예제",id:"사용-예제",children:[{value:"등록하기",id:"등록하기",children:[]},{value:"등록 아이템 확인하기",id:"등록-아이템-확인하기",children:[]}]}],o={rightToc:c},s="wrapper";function d(e){var t=e.components,a=l(e,["components"]);return Object(n.b)(s,i({},o,a,{components:t,mdxType:"MDXLayout"}),Object(n.b)("h2",null,Object(n.b)("a",i({parentName:"h2"},{"aria-hidden":!0,className:"anchor",id:"loaderregistry"})),Object(n.b)("a",i({parentName:"h2"},{"aria-hidden":!0,className:"hash-link",href:"#loaderregistry"}),"#"),"LoaderRegistry?"),Object(n.b)("p",null,Object(n.b)("inlineCode",{parentName:"p"},"LoaderRegistry"),"는 ",Object(n.b)("a",i({parentName:"p"},{href:"/loader-manual/docs/adv/load"}),Object(n.b)("inlineCode",{parentName:"a"},"load"))," 기능을 보다 간편하게 사용하기 위해 미리 사용할 시트 라이브러리들을 등록해 놓을 수 있는 저장소입니다."),Object(n.b)("p",null,"이 레지스트리에 아이템(라이브러리)을 추가하는 방법은 세 가지가 있습니다."),Object(n.b)("ul",null,Object(n.b)("li",{parentName:"ul"},Object(n.b)("a",i({parentName:"li"},{href:"/loader-manual/docs/adv/config.md#loaderconfigoptions"}),Object(n.b)("inlineCode",{parentName:"a"},"config")),"기능의 ",Object(n.b)("inlineCode",{parentName:"li"},"registry")," 옵션에 추가"),Object(n.b)("li",{parentName:"ul"},Object(n.b)("a",i({parentName:"li"},{href:"#add"}),Object(n.b)("inlineCode",{parentName:"a"},"registry.add"))," 기능을 사용"),Object(n.b)("li",{parentName:"ul"},Object(n.b)("a",i({parentName:"li"},{href:"/loader-manual/docs/adv/load"}),Object(n.b)("inlineCode",{parentName:"a"},"load"))," 기능을 사용")),Object(n.b)("blockquote",null,Object(n.b)(r.c,{color:"#555",mdxType:"Highlight"},'이하 문서에서 LoaderRegistry에 추가할 또는 추가된 라이브러리(스크립트) 객체는 "',Object(n.b)("b",null,"아이템"),'"이라고 일컫습니다.')),Object(n.b)("h2",null,Object(n.b)("a",i({parentName:"h2"},{"aria-hidden":!0,className:"anchor",id:"인터페이스"})),Object(n.b)("a",i({parentName:"h2"},{"aria-hidden":!0,className:"hash-link",href:"#인터페이스"}),"#"),"인터페이스"),Object(n.b)("h3",null,Object(n.b)("a",i({parentName:"h3"},{"aria-hidden":!0,className:"anchor",id:"customeventemitter"})),Object(n.b)("a",i({parentName:"h3"},{"aria-hidden":!0,className:"hash-link",href:"#customeventemitter"}),"#"),"CustomEventEmitter"),Object(n.b)("pre",null,Object(n.b)("code",i({parentName:"pre"},{className:"language-ts"}),"abstract class CustomEventEmitter extends EventEmitter {\n  // override\n  emit(event: string | symbol, ...args: any[]): boolean\n  // custom function\n  bind(events: string | symbol, listener: (...args: any[]) => void): this\n}\n")),Object(n.b)("ul",null,Object(n.b)("li",{parentName:"ul"},"class extends ",Object(n.b)("a",i({parentName:"li"},{href:"https://nodejs.org/api/events.html#events_class_eventemitter"}),Object(n.b)("inlineCode",{parentName:"a"},"EventEmitter"))),Object(n.b)("li",{parentName:"ul"},Object(n.b)("inlineCode",{parentName:"li"},"bind"),": 공백으로 구분된 이벤트 유형들에 하나의 이벤트 콜백을 바인딩",Object(n.b)("pre",{parentName:"li"},Object(n.b)("code",i({parentName:"pre"},{className:"language-js"}),"// load, loaded 이벤트 바인딩\nloader.bind('load loaded', eventHandler)\n")))),Object(n.b)("h3",null,Object(n.b)("a",i({parentName:"h3"},{"aria-hidden":!0,className:"anchor",id:"ibsheetloader"})),Object(n.b)("a",i({parentName:"h3"},{"aria-hidden":!0,className:"hash-link",href:"#ibsheetloader"}),"#"),"IBSheetLoader"),Object(n.b)("pre",null,Object(n.b)("code",i({parentName:"pre"},{className:"language-ts"}),"abstract class IBSheetLoader extends CustomEventEmitter {\n  registry: LoaderRegistry\n  // ...\n}\n")),Object(n.b)("ul",null,Object(n.b)("li",{parentName:"ul"},"class extends ",Object(n.b)("a",i({parentName:"li"},{href:"#customeventemitter"}),Object(n.b)("inlineCode",{parentName:"a"},"CustomEventEmitter")))),Object(n.b)("h3",null,Object(n.b)("a",i({parentName:"h3"},{"aria-hidden":!0,className:"anchor",id:"loaderregistry-1"})),Object(n.b)("a",i({parentName:"h3"},{"aria-hidden":!0,className:"hash-link",href:"#loaderregistry-1"}),"#"),"LoaderRegistry"),Object(n.b)("p",null,"LoaderRegistry 클래스"),Object(n.b)("pre",null,Object(n.b)("code",i({parentName:"pre"},{className:"language-ts"}),"abstract class LoaderRegistry extends CustomEventEmitter {\n  private _list: RegistryItem[]\n  // ...\n}\n")),Object(n.b)("ul",null,Object(n.b)("li",{parentName:"ul"},"class extends ",Object(n.b)("a",i({parentName:"li"},{href:"#customeventemitter"}),Object(n.b)("inlineCode",{parentName:"a"},"CustomEventEmitter")))),Object(n.b)("h3",null,Object(n.b)("a",i({parentName:"h3"},{"aria-hidden":!0,className:"anchor",id:"registryitem"})),Object(n.b)("a",i({parentName:"h3"},{"aria-hidden":!0,className:"hash-link",href:"#registryitem"}),"#"),"RegistryItem"),Object(n.b)("p",null,"RegistryItem의 아이템 객체"),Object(n.b)("pre",null,Object(n.b)("code",i({parentName:"pre"},{className:"language-ts"}),"abstract class RegistryItem extends CustomEventEmitter {\n  constructor(data: RegistryItemData) => this\n  name: string\n  version: string\n  readonly alias: string\n  readonly loaded: string\n  // ...\n}\n")),Object(n.b)("ul",null,Object(n.b)("li",{parentName:"ul"},"class extends ",Object(n.b)("a",i({parentName:"li"},{href:"#customeventemitter"}),Object(n.b)("inlineCode",{parentName:"a"},"CustomEventEmitter"))),Object(n.b)("li",{parentName:"ul"},Object(n.b)("inlineCode",{parentName:"li"},"name"),": ",Object(n.b)("inlineCode",{parentName:"li"},"string")," - 아이템 식별자(",Object(n.b)("inlineCode",{parentName:"li"},"name"),"), 유일하지만 여러 개의 버전을 가질 수 있음"),Object(n.b)("li",{parentName:"ul"},Object(n.b)("inlineCode",{parentName:"li"},"version"),": ",Object(n.b)("inlineCode",{parentName:"li"},"string")," - 아이템의 버전"),Object(n.b)("li",{parentName:"ul"},Object(n.b)("inlineCode",{parentName:"li"},"alias"),": ",Object(n.b)("inlineCode",{parentName:"li"},"string")," - 식별자(",Object(n.b)("inlineCode",{parentName:"li"},"name"),")와 버전",Object(n.b)("inlineCode",{parentName:"li"},"version"),"의 조합 문자열(",Object(n.b)("inlineCode",{parentName:"li"},"name@version"),"), ",Object(n.b)("br",null),"\n버전이 없다면 식별자와 동일"),Object(n.b)("li",{parentName:"ul"},Object(n.b)("inlineCode",{parentName:"li"},"loaded"),": ",Object(n.b)("inlineCode",{parentName:"li"},"boolean")," - 아이템이 로드되었는지 여부를 반환")),Object(n.b)("h3",null,Object(n.b)("a",i({parentName:"h3"},{"aria-hidden":!0,className:"anchor",id:"registryitemdata"})),Object(n.b)("a",i({parentName:"h3"},{"aria-hidden":!0,className:"hash-link",href:"#registryitemdata"}),"#"),"RegistryItemData"),Object(n.b)("p",null,"라이브러리 등록 데이터"),Object(n.b)("h4",null,Object(n.b)("a",i({parentName:"h4"},{"aria-hidden":!0,className:"anchor",id:"common-interface"})),Object(n.b)("a",i({parentName:"h4"},{"aria-hidden":!0,className:"hash-link",href:"#common-interface"}),"#"),"Common Interface"),Object(n.b)("ul",null,Object(n.b)("li",{parentName:"ul"},Object(n.b)("inlineCode",{parentName:"li"},"name"),": ",Object(n.b)("inlineCode",{parentName:"li"},"string")," - 식별자(",Object(n.b)("strong",{parentName:"li"},"Must be unique"),")"),Object(n.b)("li",{parentName:"ul"},Object(n.b)("inlineCode",{parentName:"li"},"version"),": ",Object(n.b)("inlineCode",{parentName:"li"},"string")," - 버전"),Object(n.b)("li",{parentName:"ul"},Object(n.b)("inlineCode",{parentName:"li"},"baseUrl"),": ",Object(n.b)("inlineCode",{parentName:"li"},"string")," - URL의 기본 경로(프로토콜 또는 절대경로를 포함하지 않은 경우)"),Object(n.b)("li",{parentName:"ul"},Object(n.b)("inlineCode",{parentName:"li"},"urls"),": ",Object(n.b)("inlineCode",{parentName:"li"},"string[]|object[]")," - URL 목록",Object(n.b)("ul",{parentName:"li"},Object(n.b)("li",{parentName:"ul"},Object(n.b)("inlineCode",{parentName:"li"},"url"),": ",Object(n.b)("inlineCode",{parentName:"li"},"string")," - URL 문자열"),Object(n.b)("li",{parentName:"ul"},Object(n.b)("inlineCode",{parentName:"li"},"target"),": ",Object(n.b)("inlineCode",{parentName:"li"},"head|body")," - 추가시킬 부모 HTML 태그 이름(",Object(n.b)("inlineCode",{parentName:"li"},"head")," 또는 ",Object(n.b)("inlineCode",{parentName:"li"},"body"),")"),Object(n.b)("li",{parentName:"ul"},Object(n.b)("inlineCode",{parentName:"li"},"type"),": ",Object(n.b)("inlineCode",{parentName:"li"},"css|js")," - 스크립트 타입, URL에 파일의 확장자가 포함되지 않은 경우 명시"))),Object(n.b)("li",{parentName:"ul"},Object(n.b)("inlineCode",{parentName:"li"},"dependentUrls")," - 함께 제거시킬 URL 목록(",Object(n.b)("a",i({parentName:"li"},{href:"./unload"}),Object(n.b)("inlineCode",{parentName:"a"},"unload")),"시 사용)"),Object(n.b)("li",{parentName:"ul"},Object(n.b)("inlineCode",{parentName:"li"},"validate"),": ",Object(n.b)("inlineCode",{parentName:"li"},"() => boolean")," - 스크립트 추가 후 검증 로직")),Object(n.b)("h4",null,Object(n.b)("a",i({parentName:"h4"},{"aria-hidden":!0,className:"anchor",id:"only-for-ibsheet"})),Object(n.b)("a",i({parentName:"h4"},{"aria-hidden":!0,className:"hash-link",href:"#only-for-ibsheet"}),"#"),"only for IBSheet"),Object(n.b)("ul",null,Object(n.b)("li",{parentName:"ul"},Object(n.b)("inlineCode",{parentName:"li"},"license"),": ",Object(n.b)("inlineCode",{parentName:"li"},"URL|string"),Object(n.b)("ul",{parentName:"li"},Object(n.b)("li",{parentName:"ul"},Object(n.b)("inlineCode",{parentName:"li"},"URL")," - 라이센스 파일 URL을 목록에 추가(ex: ",Object(n.b)("inlineCode",{parentName:"li"},"ibleaders.js"),")"),Object(n.b)("li",{parentName:"ul"},Object(n.b)("inlineCode",{parentName:"li"},"string")," - 전역 스코프의 ",Object(n.b)("inlineCode",{parentName:"li"},"ibleaders")," 객체에, ",Object(n.b)("inlineCode",{parentName:"li"},"license")," 키 값을 추가합니다."))),Object(n.b)("li",{parentName:"ul"},Object(n.b)("inlineCode",{parentName:"li"},"theme"),": CSS 테마 로드 옵션(기본값: ",Object(n.b)("inlineCode",{parentName:"li"},"default"),")",Object(n.b)("ul",{parentName:"li"},Object(n.b)("li",{parentName:"ul"},"설정에 따라 CSS 파일 URL을 완성합니다. ",Object(n.b)("inlineCode",{parentName:"li"},"css/<theme>/main.css")))),Object(n.b)("li",{parentName:"ul"},Object(n.b)("inlineCode",{parentName:"li"},"locales"),": 메시지 데이터 로드 옵션(기본값: ",Object(n.b)("inlineCode",{parentName:"li"},"['ko']"),")",Object(n.b)("ul",{parentName:"li"},Object(n.b)("li",{parentName:"ul"},"설정에 따라 언어팩 파일 URL을 완성합니다. ",Object(n.b)("inlineCode",{parentName:"li"},"locale/<locale>.js")),Object(n.b)("li",{parentName:"ul"},Object(n.b)("inlineCode",{parentName:"li"},"locales: ['ko']"),"를 ",Object(n.b)("inlineCode",{parentName:"li"},"locales: 'ko'")," 와 같이 사용할 수 있다."))),Object(n.b)("li",{parentName:"ul"},Object(n.b)("inlineCode",{parentName:"li"},"corefile"),": 코어 파일이름 사용자화 옵션(기본값: ",Object(n.b)("inlineCode",{parentName:"li"},"ibsheet.js"),")"),Object(n.b)("li",{parentName:"ul"},Object(n.b)("inlineCode",{parentName:"li"},"plugins"),": 설정에 따라 스크립트 파일 URL을 완성합니다. ",Object(n.b)("inlineCode",{parentName:"li"},"plugins/ibsheet-<name>.js"),Object(n.b)("ul",{parentName:"li"},Object(n.b)("li",{parentName:"ul"},Object(n.b)("inlineCode",{parentName:"li"},"excel")," - ",Object(n.b)("inlineCode",{parentName:"li"},"plugins/ibsheet-excel.js")),Object(n.b)("li",{parentName:"ul"},Object(n.b)("inlineCode",{parentName:"li"},"common")," - ",Object(n.b)("inlineCode",{parentName:"li"},"plugins/ibsheet-common.js")),Object(n.b)("li",{parentName:"ul"},Object(n.b)("inlineCode",{parentName:"li"},"dialog")," - ",Object(n.b)("inlineCode",{parentName:"li"},"plugins/ibsheet-dialog.js"))))),Object(n.b)("h2",null,Object(n.b)("a",i({parentName:"h2"},{"aria-hidden":!0,className:"anchor",id:"주요-기능"})),Object(n.b)("a",i({parentName:"h2"},{"aria-hidden":!0,className:"hash-link",href:"#주요-기능"}),"#"),"주요 기능"),Object(n.b)("h3",null,Object(n.b)("a",i({parentName:"h3"},{"aria-hidden":!0,className:"anchor",id:"add"})),Object(n.b)("a",i({parentName:"h3"},{"aria-hidden":!0,className:"hash-link",href:"#add"}),"#"),"add"),Object(n.b)(r.b,{mdxType:"BadgeGroup"},Object(n.b)(r.a,{class:"since",mdxType:"Badge"},"1.0.0")),Object(n.b)("p",null,"아이템을 추가"),Object(n.b)("pre",null,Object(n.b)("code",i({parentName:"pre"},{className:"language-ts"}),"interface LoaderRegistryFunc {\n  add(\n    data: RegistryItemData,\n    overwrite?: boolean = false\n  ): RegistryItem | undefined\n}\n// usage\nloader.registry.add(data)\n")),Object(n.b)("ul",null,Object(n.b)("li",{parentName:"ul"},Object(n.b)("inlineCode",{parentName:"li"},"data"),": 등록 데이터"),Object(n.b)("li",{parentName:"ul"},Object(n.b)("inlineCode",{parentName:"li"},"overwrite"),": 이미 동일한 ",Object(n.b)("inlineCode",{parentName:"li"},"alias"),"의 아이템이 존재할 때 업데이트 하기 (기본값: ",Object(n.b)("inlineCode",{parentName:"li"},"false"),")")),Object(n.b)("h3",null,Object(n.b)("a",i({parentName:"h3"},{"aria-hidden":!0,className:"anchor",id:"addall"})),Object(n.b)("a",i({parentName:"h3"},{"aria-hidden":!0,className:"hash-link",href:"#addall"}),"#"),"addAll"),Object(n.b)(r.b,{mdxType:"BadgeGroup"},Object(n.b)(r.a,{class:"since",mdxType:"Badge"},"1.0.0")),Object(n.b)("p",null,"아이템들을 순차적으로 추가"),Object(n.b)("pre",null,Object(n.b)("code",i({parentName:"pre"},{className:"language-ts"}),"interface LoaderRegistryFunc {\n  addAll(\n    data: RegistryItemData[],\n    overwrite?: boolean = false\n  ): RegistryItem[]\n}\n// usage\nloader.registry.addAll(data)\n")),Object(n.b)("ul",null,Object(n.b)("li",{parentName:"ul"},Object(n.b)("inlineCode",{parentName:"li"},"data"),": 등록 데이터 목록"),Object(n.b)("li",{parentName:"ul"},Object(n.b)("inlineCode",{parentName:"li"},"overwrite"),": 이미 동일한 ",Object(n.b)("inlineCode",{parentName:"li"},"alias"),"의 아이템이 존재할 때 덮어쓰기 (기본값: ",Object(n.b)("inlineCode",{parentName:"li"},"false"),")")),Object(n.b)("h3",null,Object(n.b)("a",i({parentName:"h3"},{"aria-hidden":!0,className:"anchor",id:"get"})),Object(n.b)("a",i({parentName:"h3"},{"aria-hidden":!0,className:"hash-link",href:"#get"}),"#"),"get"),Object(n.b)(r.b,{mdxType:"BadgeGroup"},Object(n.b)(r.a,{class:"since",mdxType:"Badge"},"1.0.0")),Object(n.b)("p",null,"일치하는 ",Object(n.b)("inlineCode",{parentName:"p"},"alias"),"의 아이템을 찾아서 반환, 없다면  ",Object(n.b)("inlineCode",{parentName:"p"},"null"),"을 반환"),Object(n.b)("pre",null,Object(n.b)("code",i({parentName:"pre"},{className:"language-ts"}),"interface LoaderRegistryFunc {\n  get(alias: string): RegistryItem | null\n}\n// usage\nloader.registry.get(alias)\n")),Object(n.b)("h3",null,Object(n.b)("a",i({parentName:"h3"},{"aria-hidden":!0,className:"anchor",id:"getall"})),Object(n.b)("a",i({parentName:"h3"},{"aria-hidden":!0,className:"hash-link",href:"#getall"}),"#"),"getAll"),Object(n.b)(r.b,{mdxType:"BadgeGroup"},Object(n.b)(r.a,{class:"since",mdxType:"Badge"},"1.0.0")),Object(n.b)("p",null,"일치하는 ",Object(n.b)("inlineCode",{parentName:"p"},"name")," 또는 ",Object(n.b)("inlineCode",{parentName:"p"},"alias"),"의 아이템을 찾아서 목록을 반환"),Object(n.b)("pre",null,Object(n.b)("code",i({parentName:"pre"},{className:"language-ts"}),"interface LoaderRegistryFunc {\n  getAll(alias: string): RegistryItem[]\n}\n// usage\nloader.registry.getAll(alias)\n")),Object(n.b)("h3",null,Object(n.b)("a",i({parentName:"h3"},{"aria-hidden":!0,className:"anchor",id:"info"})),Object(n.b)("a",i({parentName:"h3"},{"aria-hidden":!0,className:"hash-link",href:"#info"}),"#"),"info"),Object(n.b)(r.b,{mdxType:"BadgeGroup"},Object(n.b)(r.a,{class:"since",mdxType:"Badge"},"1.0.0")),Object(n.b)("p",null,"일치하는 ",Object(n.b)("inlineCode",{parentName:"p"},"name")," 또는 ",Object(n.b)("inlineCode",{parentName:"p"},"alias"),"의 아이템을 찾아서 각 객체의 정보들을 ",Object(n.b)("inlineCode",{parentName:"p"},"JSON")," 문자열로 반환, 없다면 ",Object(n.b)("inlineCode",{parentName:"p"},"undefined"),"를 반환"),Object(n.b)("pre",null,Object(n.b)("code",i({parentName:"pre"},{className:"language-ts"}),"interface LoaderRegistryFunc {\n  info(alias: string): string | undefined\n}\n// usage\nloader.registry.info(alias)\n")),Object(n.b)("h3",null,Object(n.b)("a",i({parentName:"h3"},{"aria-hidden":!0,className:"anchor",id:"list"})),Object(n.b)("a",i({parentName:"h3"},{"aria-hidden":!0,className:"hash-link",href:"#list"}),"#"),"list"),Object(n.b)(r.b,{mdxType:"BadgeGroup"},Object(n.b)(r.a,{class:"since",mdxType:"Badge"},"1.0.0")),Object(n.b)("p",null,"추가된 아이템의 ",Object(n.b)("inlineCode",{parentName:"p"},"alias")," 목록을 반환"),Object(n.b)("pre",null,Object(n.b)("code",i({parentName:"pre"},{className:"language-ts"}),"interface LoaderRegistryFunc {\n  list(): string[]\n}\n// usage\nloader.registry.list()\n")),Object(n.b)("h3",null,Object(n.b)("a",i({parentName:"h3"},{"aria-hidden":!0,className:"anchor",id:"exists"})),Object(n.b)("a",i({parentName:"h3"},{"aria-hidden":!0,className:"hash-link",href:"#exists"}),"#"),"exists"),Object(n.b)(r.b,{mdxType:"BadgeGroup"},Object(n.b)(r.a,{class:"since",mdxType:"Badge"},"1.0.0")),Object(n.b)("p",null,"일치하는 ",Object(n.b)("inlineCode",{parentName:"p"},"name")," 또는 ",Object(n.b)("inlineCode",{parentName:"p"},"alias"),"의 아이템 존재 여부를 반환"),Object(n.b)("pre",null,Object(n.b)("code",i({parentName:"pre"},{className:"language-ts"}),"interface LoaderRegistryFunc {\n  exists(alias: string): boolean\n}\n// usage\nloader.registry.exists(alias)\n")),Object(n.b)("h3",null,Object(n.b)("a",i({parentName:"h3"},{"aria-hidden":!0,className:"anchor",id:"remove"})),Object(n.b)("a",i({parentName:"h3"},{"aria-hidden":!0,className:"hash-link",href:"#remove"}),"#"),"remove"),Object(n.b)(r.b,{mdxType:"BadgeGroup"},Object(n.b)(r.a,{class:"since",mdxType:"Badge"},"1.0.0")),Object(n.b)("p",null,"일치하는 ",Object(n.b)("inlineCode",{parentName:"p"},"name")," 또는 ",Object(n.b)("inlineCode",{parentName:"p"},"alias"),"의 아이템들을 제거하고 그 객체를 반환, 없다면 ",Object(n.b)("inlineCode",{parentName:"p"},"undefined"),"를 반환"),Object(n.b)("pre",null,Object(n.b)("code",i({parentName:"pre"},{className:"language-ts"}),"interface LoaderRegistryFunc {\n  remove(alias: string): RegistryItem | RegistryItem[] | undefined\n}\n// usage\nloader.registry.remove(alias)\n")),Object(n.b)("h2",null,Object(n.b)("a",i({parentName:"h2"},{"aria-hidden":!0,className:"anchor",id:"사용-예제"})),Object(n.b)("a",i({parentName:"h2"},{"aria-hidden":!0,className:"hash-link",href:"#사용-예제"}),"#"),"사용 예제"),Object(n.b)("h3",null,Object(n.b)("a",i({parentName:"h3"},{"aria-hidden":!0,className:"anchor",id:"등록하기"})),Object(n.b)("a",i({parentName:"h3"},{"aria-hidden":!0,className:"hash-link",href:"#등록하기"}),"#"),"등록하기"),Object(n.b)("pre",null,Object(n.b)("code",i({parentName:"pre"},{className:"language-js"}),"// get global loader instance\nimport loader from '@ibsheet/loader'\n\n// 데이터 정의\nconst ibsheetLibrary = {\n  name: 'ibsheet',          // unique name\n  // <publicpath>: your public directory\n  baseUrl: '<publicpath>/ibsheet',\n  theme: 'default',         // default\n  locales: ['ko'],          // or locales: 'ko' (default)\n  plugins: ['excel', 'common', 'dialog']\n  // license: './ibleaders.js'\n}\n\n// define registry list\nconst registry = [ibsheetLibrary]\n\n// 방법 1: loader.config 를 사용.\nloader.config({ registry: registry })\n\n// 방법 2: loader.registry.add 를 사용\nloader.registry.add(ibsheetLibrary)\n\n// 방법 3: loader.registry.addAll 를 사용\nloader.registry.addAll(registry)\n\n")),Object(n.b)("h3",null,Object(n.b)("a",i({parentName:"h3"},{"aria-hidden":!0,className:"anchor",id:"등록-아이템-확인하기"})),Object(n.b)("a",i({parentName:"h3"},{"aria-hidden":!0,className:"hash-link",href:"#등록-아이템-확인하기"}),"#"),"등록 아이템 확인하기"),Object(n.b)("pre",null,Object(n.b)("code",i({parentName:"pre"},{className:"language-js"}),"// exists registry item\nconsole.log('ibsheet exists:', loader.registry.exists('ibsheet'))\n\n// get registry item\nconst item = loader.registry.get('ibsheet')\nconsole.log('ibsheet item:', item)\nconsole.log('ibsheet item.loaded:', item.loaded)\n\n// get registry item info\nconsole.log('ibsheet info:', loader.registry.info('ibsheet'))\n\n// get registry list\nconsole.log('ibsheet aliases', loader.registry.list())\nconsole.log('loader list', loader.list())\n")))}d.isMDXComponent=!0}}]);